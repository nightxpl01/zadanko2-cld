name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build, Scan and Push Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      IMAGE_NAME: ghcr.io/nightxpl01/zadanko1-cld
      CACHE_IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/zadanko1-cache:latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build multi-arch image (without push)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: false
        platforms: linux/amd64,linux/arm64
        tags: ${{ env.IMAGE_NAME }}:temp
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
        outputs: type=docker,dest=/tmp/image.tar

    - name: Load temp image for scanning
      run: docker load --input /tmp/image.tar

    - name: Enable Docker Scout CLI
      run: |
        docker scout quickview --version || true
        docker scout enable

    - name: Scan image for CVEs using Docker Scout
      id: scout
      run: |
        docker scout cves ${{ env.IMAGE_NAME }}:temp --format sarif --output cve-results.sarif
        docker scout cves ${{ env.IMAGE_NAME }}:temp --only-severities=critical,high --exit-code 1

    - name: Push image to GHCR (only if scan passed)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
        cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
